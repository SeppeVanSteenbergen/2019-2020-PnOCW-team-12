/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/chrome-dgram@3.0.4/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
exports.Socket=Socket;var EventEmitter=require("events").EventEmitter,inherits=require("inherits"),series=require("run-series"),BIND_STATE_UNBOUND=0,BIND_STATE_BINDING=1,BIND_STATE_BOUND=2,sockets={};function onReceive(e){e.socketId in sockets?sockets[e.socketId]._onReceive(e):console.error("Unknown socket id: "+e.socketId)}function onReceiveError(e){e.socketId in sockets?sockets[e.socketId]._onReceiveError(e.resultCode):console.error("Unknown socket id: "+e.socketId)}function Socket(e,t){if(EventEmitter.call(this),"string"==typeof e&&(e={type:e}),"udp4"!==e.type)throw new Error("Bad socket type specified. Valid types are: udp4");"function"==typeof t&&this.on("message",t),this._destroyed=!1,this._bindState=BIND_STATE_UNBOUND,this._bindTasks=[]}function sliceBuffer(e,t,o){if("string"==typeof e)e=Buffer.from(e);else if(!(e instanceof Buffer))throw new TypeError("First argument must be a buffer or string");t>>>=0,o>>>=0;var r=e.buffer;return(e.byteOffset||e.byteLength!==r.byteLength)&&(r=r.slice(e.byteOffset,e.byteOffset+e.byteLength)),(t||o!==e.length)&&(r=r.slice(t,o)),Buffer.from(r)}function fixBufferList(e){for(var t=new Array(e.length),o=0,r=e.length;o<r;o++){var n=e[o];if("string"==typeof n)t[o]=Buffer.from(n);else{if(!(n instanceof Buffer))return null;t[o]=n}}return t}"object"==typeof chrome&&"object"==typeof chrome.runtime&&"string"==typeof chrome.runtime.id&&"object"==typeof chrome.sockets&&"object"==typeof chrome.sockets.udp&&(chrome.sockets.udp.onReceive.addListener(onReceive),chrome.sockets.udp.onReceiveError.addListener(onReceiveError)),exports.createSocket=function(e,t){return new Socket(e,t)},inherits(Socket,EventEmitter),Socket.prototype.bind=function(e,t,o){var r=this;if("function"==typeof t&&(o=t,t=void 0),t||(t="0.0.0.0"),e||(e=0),r._bindState!==BIND_STATE_UNBOUND)throw new Error("Socket is already bound");r._bindState=BIND_STATE_BINDING,"function"==typeof o&&r.once("listening",o),chrome.sockets.udp.create(function(o){r.id=o.socketId,sockets[r.id]=r;var n=r._bindTasks.map(function(e){return e.fn});series(n,function(o){if(o)return r.emit("error",o);chrome.sockets.udp.bind(r.id,t,e,function(e){e<0?r.emit("error",new Error("Socket "+r.id+" failed to bind. "+chrome.runtime.lastError.message)):chrome.sockets.udp.getInfo(r.id,function(e){e.localPort&&e.localAddress?(r._port=e.localPort,r._address=e.localAddress,r._bindState=BIND_STATE_BOUND,r.emit("listening"),r._bindTasks.map(function(e){e.callback()})):r.emit("error",new Error("Cannot get local port/address for Socket "+r.id))})})})})},Socket.prototype._onReceive=function(e){var t=Buffer.from(new Uint8Array(e.data)),o={address:e.remoteAddress,family:"IPv4",port:e.remotePort,size:t.length};this.emit("message",t,o)},Socket.prototype._onReceiveError=function(e){this.emit("error",new Error("Socket "+this.id+" receive error "+e))},Socket.prototype.send=function(e,t,o,r,n,i){var s,c=this;if(n||r&&"function"!=typeof r?e=sliceBuffer(e,t,o):(i=r,r=t,n=o),Array.isArray(e)){if(!(s=fixBufferList(e)))throw new TypeError("Buffer list arguments must be buffers or strings")}else if("string"==typeof e)s=[Buffer.from(e)];else{if(!(e instanceof Buffer))throw new TypeError("First argument must be a buffer or a string");s=[e]}if(0===(r>>>=0)||r>65535)throw new RangeError("Port should be > 0 and < 65536");if("function"!=typeof i&&(i=function(){}),c._bindState===BIND_STATE_UNBOUND&&c.bind(0),c._bindState!==BIND_STATE_BOUND)return c._sendQueue||(c._sendQueue=[],c.once("listening",function(){for(var e=0;e<c._sendQueue.length;e++)c.send.apply(c,c._sendQueue[e]);c._sendQueue=void 0})),void c._sendQueue.push([e,t,o,r,n,i]);var f=Buffer.concat(s).buffer;chrome.sockets.udp.send(c.id,f,n,r,function(e){if(e.resultCode<0){var t=new Error("Socket "+c.id+" send error "+e.resultCode);i(t),c.emit("error",t)}else i(null)})},Socket.prototype.close=function(){this._destroyed||(delete sockets[this.id],chrome.sockets.udp.close(this.id),this._destroyed=!0,this.emit("close"))},Socket.prototype.address=function(){return{address:this._address,port:this._port,family:"IPv4"}},Socket.prototype.setBroadcast=function(e){},Socket.prototype.setTTL=function(e){},Socket.prototype.setMulticastTTL=function(e,t){var o=this;function r(t){chrome.sockets.udp.setMulticastTimeToLive(o.id,e,t)}t||(t=function(){}),o._bindState===BIND_STATE_BOUND?r(t):o._bindTasks.push({fn:r,callback:t})},Socket.prototype.setMulticastLoopback=function(e,t){var o=this;function r(t){chrome.sockets.udp.setMulticastLoopbackMode(o.id,e,t)}t||(t=function(){}),o._bindState===BIND_STATE_BOUND?r(t):o._bindTasks.push({fn:r,callback:t})},Socket.prototype.addMembership=function(e,t,o){o||(o=function(){}),chrome.sockets.udp.joinGroup(this.id,e,o)},Socket.prototype.dropMembership=function(e,t,o){o||(o=function(){}),chrome.sockets.udp.leaveGroup(this.id,e,o)},Socket.prototype.unref=function(){},Socket.prototype.ref=function(){};
//# sourceMappingURL=/sm/5ae0f51053220c12405b359fbd9e4446b71e0772c1ebd27f8e3300b38fab1852.map